library(TSA)
library(rjson)
json_data<-fromJSON(paste(readLines('D:/R-Data/SpotData/c4.2xlarge-spotprice_us-east-1d.json'), collapse=''))
source("D:/workspace/garch/test/timeseriesanalysis/ParseSpotScript.R")
base<-100
learnstep<-3600
prestep<-100
temp<-f[base:(base+learnstep)]
prepart<-f[(base+learnstep+1):(base+learnstep+prestep)]
predicted=100


garchmod=garch(x=temp,order=c(1,1))

plot(residuals(garchmod),type='l',ylab = 'Standard residual')

difflog<-diff(log(temp))*100

g1 = garchFit(formula=~garch(1,1),data=difflog,trace=F,cond.dist="std")

plot(predict(g1,n.ahead=100)$meanError,type='b')

plot(predict(g2,n.ahead=100)$standardDeviation,type='b')

m1=garch(difflog,order=c(1,1))
summary(m1)
plot(residuals(m1),type='h')
qqnorm(residuals(m1))
qqline(residuals(m1))

m1$coef[1]/(1-m1$coef[2]-m1$coef[3])

sd(diff(log(prepart))*100)^2


#向前一步预测
p1 = m1$coef[1] + m1$coef[2] * difflog[learnstep]^2 + m1$coef[3] * sd(difflog)^2

p2 = m1$coef[1] + m1$coef[2] * p1 + m1$coef[3] * p1

p3 =  m1$coef[1] + m1$coef[2] * p2 + m1$coef[3] * p2

p4 =  m1$coef[1] + m1$coef[2] * p3 + m1$coef[3] * p3

p5 =  m1$coef[1] + m1$coef[2] * p4 + m1$coef[3] * p4

p6 =  m1$coef[1] + m1$coef[2] * p5 + m1$coef[3] * p5
